name: CI/CD Pipeline for Android App

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-and-deploy:
    name: Build, Deploy & Rollback Setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          components: |
            cmdline-tools;latest
            platform-tools
            platforms;android-35
            build-tools;33.0.0

      - name: Grant gradlew permissions
        run: chmod +x ./gradlew

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          mkdir -p ./app/KEY_STORE
          echo "${KEYSTORE_BASE64}" | base64 --decode > ./app/KEY_STORE/schmng.jks

      - name: Run Unit Tests
        run: ./gradlew test

      - name: Modify Version Code for Rollback
        if: env.TAG_NAME == 'v65'
        run: |
            VERSION_CODE=1065
            VERSION_NAME="1.0.0-rollback"
            sed -i "s/versionCode = [0-9]\+/versionCode = $VERSION_CODE/" app/build.gradle.kts
            sed -i 's/versionName = "[^"]*"/versionName = "'"$VERSION_NAME"'"/' app/build.gradle.kts

      - name: Build AAB
        run: ./gradlew bundleRelease
        env:
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}

      - name: Create Tag
        id: create_tag
        run: |
          TAG_NAME="v${{ github.run_number }}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag -d $TAG_NAME || true
          git push origin :refs/tags/$TAG_NAME || true
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: "Release of version ${{ env.TAG_NAME }}"
          files: app/build/outputs/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install GitHub CLI
        run: sudo apt install gh -y

      - name: Download Previous AAB from GitHub Release
        run: |
          mkdir -p ./previous
          # Try latest previous release
          LATEST_TAG=$(gh release list --limit 2 | tail -n 1 | awk '{print $1}')
          echo "Trying to download rollback AAB from: $LATEST_TAG"
          gh release download "$LATEST_TAG" -p "app-release.aab" -D ./previous || {
            echo "Failed to download from $LATEST_TAG. Falling back to v65."
            gh release download "v65" -p "app-release.aab" -D ./previous || {
              echo "Fallback to v65 failed. Rollback download failed."
              exit 1
            }
          }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Previous Version to Beta Track
        if: success()
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_JSON }}
          packageName: com.ecorvi.schmng
          releaseFiles: ./previous/app-release.aab
          track: beta
          status: completed
          inAppUpdatePriority: 2

      - name: Upload New Version to Production
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_JSON }}
          packageName: com.ecorvi.schmng
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: production
          status: completed
          inAppUpdatePriority: 0
          whatsNewDirectory: release-notes
