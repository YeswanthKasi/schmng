name: CI/CD Pipeline for Android App

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-and-deploy:
    name: Build, Deploy & Rollback Setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker with BuildKit
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --allow-insecure-entitlement security.insecure

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build and run with Docker
      - name: Build and Run with Docker
        run: |
          # Build the Docker image with BuildKit cache
          DOCKER_BUILDKIT=1 docker build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t android-builder .

          # Create necessary directories with correct permissions
          mkdir -p app/build/outputs/bundle/release
          chmod -R 777 app/build

          # Run the container with proper volume mounts and environment
          docker run --rm \
            -e KEY_ALIAS=${{ secrets.KEY_ALIAS }} \
            -e KEY_PASSWORD=${{ secrets.KEY_PASSWORD }} \
            -e STORE_PASSWORD=${{ secrets.STORE_PASSWORD }} \
            -e JAVA_HOME=/usr/local/openjdk-21 \
            -e ANDROID_SDK_ROOT=/usr/local/android-sdk \
            -v ${PWD}:/app \
            -v gradle-cache:/root/.gradle \
            android-builder \
            ./gradlew bundleRelease --no-daemon --stacktrace

          # Move cache
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          mkdir -p ./app/KEY_STORE
          echo "${KEYSTORE_BASE64}" | base64 --decode > ./app/KEY_STORE/schmng.jks

      - name: Create Tag
        id: create_tag
        run: |
          TAG_NAME="v${{ github.run_number }}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git tag -d $TAG_NAME || true
          git push origin :refs/tags/$TAG_NAME || true
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: "Release of version ${{ env.TAG_NAME }}"
          files: app/build/outputs/bundle/release/app-release.aab
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_JSON }}
          packageName: com.ecorvi.schmng
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: production
          status: completed
          inAppUpdatePriority: 0
  
